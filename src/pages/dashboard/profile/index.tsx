import DashboardLayout from "@/DashboardLayout";
import useCurrentUser from "@/hooks/useCurrentUser";
import {
  Container,
  Toolbar,
  Avatar,
  Box,
  Card,
  CardContent,
  Divider,
  Typography,
} from "@mui/material";
import Head from "next/head";
import loading from "../../../assets/Loading/loading.json";
import dynamic from "next/dynamic";

const Lottie = dynamic(() => import("lottie-react"), { ssr: false });

interface UserType {
  _id?: string;
  name?: string;
  email?: string;
  role?: string;
  image?: string;
}

const Profile: React.FC = () => {
  const { currentUser, refetch, isLoading } = useCurrentUser();

  if (isLoading) {
    return (
      <Container
        sx={{
          height: "100vh",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <Lottie animationData={loading} />
      </Container>
    );
  }

  if (!currentUser || currentUser.length === 0) {
    refetch();
    return (
      <Container sx={{ textAlign: "center", marginTop: "2rem" }}>
        <Lottie animationData={loading} />
        <Typography variant="h6">
          Error loading user profile. Please try again. Refreshing...
        </Typography>
      </Container>
    );
  }

  const user: UserType = currentUser[0];

  return (
    <DashboardLayout>
      <Head>
        <title>Profile || EduPulse </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Toolbar />

      <Container>
        <Card>
          <CardContent>
            <Box
              sx={{
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
              }}
            >
              <Avatar
                src={user?.image}
                sx={{
                  height: 80,
                  mb: 2,
                  width: 80,
                }}
              />
              <Typography gutterBottom variant="h5">
                {user?.name}
              </Typography>
              <Typography color="text.secondary" variant="body2">
                {user?.role}
              </Typography>
              <Typography color="text.secondary" variant="body2">
                {user?.email}
              </Typography>
            </Box>
          </CardContent>
          <Divider />
        </Card>
      </Container>
    </DashboardLayout>
  );
};

export default Profile;
